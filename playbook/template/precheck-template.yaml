---
# 功能说明：
#   1. 演练前检查集群健康状态, 如果集群不健康, 则不执行演练;
#      校验规则: Nodes健康率>=nodes-health-ratio && Pods的健康率>=pods-health-ratio 则允许执行演练
#   2. 演练前检查被演练集群中是否存在{check-configmap-namespace}/{check-configmap-name} configmap, 如果不存在, 则不执行演练;
# 参数说明:
#   precheck模版参数说明:
#     1. image: precheck工具镜像, 用于校验集群健康状态, tke-chaos/cmd/check.go
#     2. check-configmap-name: 指定被演练集群中要检查的configmap名称
#     3. check-configmap-namespace: 指定被演练集群中要检查的configmap所在的namespace
#     4. pods-health-ratio: 指定被演练集群中pod的健康率, 如果pod的健康率小于pod-health-ratio, 则不执行演练
#     5. nodes-health-ratio: 指定被演练集群中node的健康率, 如果node的健康率小于node-health-ratio, 则不执行演练
#     6. kubeconfig-secret-name: 用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: precheck-template
spec:
  entrypoint: precheck
  templates:
  - name: precheck
    inputs:
      parameters:
      - name: image
        default: "ccr.ccs.tencentyun.com/tkeimages/tke-chaos:v0.0.2"
        description: "precheck工具镜像, 用于校验集群健康状态"
      - name: check-configmap-name
        default: "tke-chaos-precheck-resource"
        description: "指定被演练集群中要检查的configmap名称"
      - name: check-configmap-namespace
        default: "tke-chaos-test"
        description: "指定被演练集群中要检查的configmap所在的namespace"
      - name: pods-health-ratio
        default: "0.9"
        description: "指定被演练集群中pod的健康率, 如果pod的健康率小于pod-health-ratio, 则不执行演练"
      - name: nodes-health-ratio
        default: "0.9"
        description: "指定被演练集群中node的健康率, 如果node的健康率小于node-health-ratio, 则不执行演练"
      - name: kubeconfig-secret-name
        description: "用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群"
    dag:
      tasks:
      - name: internal-precheck
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: check-configmap-name
            value: "{{inputs.parameters.check-configmap-name}}"
          - name: check-configmap-namespace
            value: "{{inputs.parameters.check-configmap-namespace}}"
          - name: pods-health-ratio
            value: "{{inputs.parameters.pods-health-ratio}}"
          - name: nodes-health-ratio
            value: "{{inputs.parameters.nodes-health-ratio}}"
        template: internal-precheck
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' == ''"
      - name: external-precheck
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: check-configmap-name
            value: "{{inputs.parameters.check-configmap-name}}"
          - name: check-configmap-namespace
            value: "{{inputs.parameters.check-configmap-namespace}}"
          - name: pods-health-ratio
            value: "{{inputs.parameters.pods-health-ratio}}"
          - name: nodes-health-ratio
            value: "{{inputs.parameters.nodes-health-ratio}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        template: external-precheck
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' != ''"
    outputs:
      parameters:
      - name: result
        valueFrom:
          expression: "'{{inputs.parameters.kubeconfig-secret-name}}' == '' ? tasks['internal-precheck'].outputs.result : tasks['external-precheck'].outputs.result"

  - name: internal-precheck
    inputs:
      parameters:
      - name: image
      - name: check-configmap-name
      - name: check-configmap-namespace
      - name: pods-health-ratio
      - name: nodes-health-ratio
    container:
      image: "{{inputs.parameters.image}}"
      command:
      - /kubestress
      - check
      - --configmap={{inputs.parameters.check-configmap-name}}
      - --namespace={{inputs.parameters.check-configmap-namespace}}
      - --pods-health-ratio={{inputs.parameters.pods-health-ratio}}
      - --nodes-health-ratio={{inputs.parameters.nodes-health-ratio}}

  - name: external-precheck
    inputs:
      parameters:
      - name: image
      - name: kubeconfig-secret-name
      - name: check-configmap-name
      - name: check-configmap-namespace
      - name: pods-health-ratio
      - name: nodes-health-ratio
    container:
      image: "{{inputs.parameters.image}}"
      command:
      - /kubestress
      - check
      - --kubeconfig=/.kube/config
      - --configmap={{inputs.parameters.check-configmap-name}}
      - --namespace={{inputs.parameters.check-configmap-namespace}}
      - --pods-health-ratio={{inputs.parameters.pods-health-ratio}}
      - --nodes-health-ratio={{inputs.parameters.nodes-health-ratio}}
      volumeMounts:
      - name: kubeconfig
        mountPath: "/.kube"
        readOnly: true
    volumes:
    - name: kubeconfig
      secret:
        secretName: "{{inputs.parameters.kubeconfig-secret-name}}"
        items:
        - key: config
          path: config
