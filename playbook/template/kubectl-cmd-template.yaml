---
# 功能说明：执行kubectl命令模版, 用于对集群执行kubectl命令操作
# 参数说明:
#   kubectl-mutating-cmd模版参数说明:
#     1. action: 执行的kubectl命令, 支持create/apply/delete
#     2. manifest: 执行的kubectl命令的yaml配置
#     3. kubeconfig-secret-name: 用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群
#   kubectl-cmd模版参数说明:
#     1. cmd: 执行的kubectl命令
#     2. kubeconfig-secret-name: 用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群
#   kubectl-script模版参数说明:
#     1. source: 执行的kubectl命令的yaml配置
#     2. kubeconfig-secret-name: 用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: kubectl-cmd
spec:
  entrypoint: kubectl-cmd
  templates:
  - name: kubectl-mutating-cmd
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: action
        description: "执行的kubectl命令, 支持create/apply/delete"
      - name: manifest
        description: "执行的kubectl命令的yaml配置"
      - name: kubeconfig-secret-name
        description: "用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群"
    dag:
      tasks:
      - name: internal-kubectl-mutating-cmd
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: action
            value: "{{inputs.parameters.action}}"
          - name: manifest
            value: "{{inputs.parameters.manifest}}"
        template: internal-kubectl-mutating-cmd
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' == ''"
      - name: external-kubectl-mutating-cmd
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: action
            value: "{{inputs.parameters.action}}"
          - name: manifest
            value: "{{inputs.parameters.manifest}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        template: external-kubectl-mutating-cmd
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' != ''"
    outputs:
      parameters:
      - name: result
        valueFrom:
          expression: "'{{inputs.parameters.kubeconfig-secret-name}}' == '' ? tasks['internal-kubectl-mutating-cmd'].outputs.result : tasks['external-kubectl-mutating-cmd'].outputs.result"

  - name: external-kubectl-mutating-cmd
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: action
      - name: manifest
      - name: kubeconfig-secret-name
    script:
      image: "{{inputs.parameters.image}}"
      command: [bash]
      source: |
        #!/bin/bash
        cat <<EOF | kubectl {{inputs.parameters.action}} -f -
        {{inputs.parameters.manifest}}
        EOF
      volumeMounts:
      - name: kubeconfig
        mountPath: "/.kube"
        readOnly: true
    volumes:
    - name: kubeconfig
      secret:
        secretName: "{{inputs.parameters.kubeconfig-secret-name}}"
        items:
        - key: config
          path: config

  - name: internal-kubectl-mutating-cmd
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: action
      - name: manifest
    script:
      image: "{{inputs.parameters.image}}"
      command: [bash]
      source: |
        #!/bin/bash
        cat <<EOF | kubectl {{inputs.parameters.action}} -f -
        {{inputs.parameters.manifest}}
        EOF

  - name: kubectl-cmd
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: cmd
        description: "执行的kubectl命令, 如: get pods -n default"
      - name: kubeconfig-secret-name
        description: "用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群"
    dag:
      tasks:
      - name: internal-kubectl-cmd
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: cmd
            value: "{{inputs.parameters.cmd}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        template: internal-kubectl-cmd
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' == ''"
      - name: external-kubectl-cmd
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: cmd
            value: "{{inputs.parameters.cmd}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        template: external-kubectl-cmd
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' != ''"
    outputs:
      parameters:
      - name: result
        valueFrom:
          expression: "'{{inputs.parameters.kubeconfig-secret-name}}' == '' ? tasks['internal-kubectl-cmd'].outputs.result : tasks['external-kubectl-cmd'].outputs.result"

  - name: internal-kubectl-cmd
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: cmd
    script:
      image: "{{inputs.parameters.image}}"
      command: [bash]
      source: |
        #!/bin/bash
        kubectl {{inputs.parameters.cmd}}

  - name: external-kubectl-cmd
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: cmd
      - name: kubeconfig-secret-name
    script:
      image: "{{inputs.parameters.image}}"
      command: [bash]
      source: |
        #!/bin/bash
        kubectl {{inputs.parameters.cmd}}
      volumeMounts:
      - name: kubeconfig
        mountPath: "/.kube"
        readOnly: true
    volumes:
    - name: kubeconfig
      secret:
        secretName: "{{inputs.parameters.kubeconfig-secret-name}}"
        items:
        - key: config
          path: config

  - name: kubectl-script
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: source
        description: "kubectl脚本"
      - name: kubeconfig-secret-name
        description: "用于指定接入的K8s集群的kubeconfig凭证的secret名称, 如果为空，则默认为当前集群"
    dag:
      tasks:
      - name: internal-kubectl-script
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: source
            value: "{{inputs.parameters.source}}"
        template: internal-kubectl-script
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' == ''"
      - name: external-kubectl-script
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.image}}"
          - name: source
            value: "{{inputs.parameters.source}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        template: external-kubectl-script
        when: "'{{inputs.parameters.kubeconfig-secret-name}}' != ''"
    outputs:
      parameters:
      - name: result
        valueFrom:
          expression: "'{{inputs.parameters.kubeconfig-secret-name}}' == '' ? tasks['internal-kubectl-script'].outputs.result : tasks['external-kubectl-script'].outputs.result"

  - name: internal-kubectl-script
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: source
    script:
      image: "{{inputs.parameters.image}}"
      command: [bash]
      source: |
        {{inputs.parameters.source}}

  - name: external-kubectl-script
    inputs:
      parameters:
      - name: image
        default: "bitnami/kubectl:1.32.4"
      - name: source
      - name: kubeconfig-secret-name
    script:
      image: "{{inputs.parameters.image}}"
      command: [bash]
      source: |
        {{inputs.parameters.source}}
      volumeMounts:
      - name: kubeconfig
        mountPath: "/.kube"
        readOnly: true
    volumes:
    - name: kubeconfig
      secret:
        secretName: "{{inputs.parameters.kubeconfig-secret-name}}"
        items:
        - key: config
          path: config
