# 功能说明: apiserver/etcd 高负载演练
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: apiserver-load-test-template
spec:
  entrypoint: main
  templates:
  - name: main
    inputs:
      parameters:
      # 全局参数
      - name: cluster-id
        default: "未知"
        description: "集群ID"
      - name: enable-apf
        default: "false"
        description: "是否启用apf限流"
      - name: enable-etcd-protect
        default: "false"
        description: "是否启用etcd过载保护"
      - name: enable-resource-create
        default: "false"
        description: "演练开始前是否创建资源, 模拟资源规模"
      - name: webhook-url
        default: ""
        description: "企业微信群webhook通知地址"
      - name: kubeconfig-secret-name
        description: "测试remote cluster填该字段, 如未填些, 则测试当前集群(选填)"
      - name: chaos-type
        default: "演练类型"

      # precheck参数
      - name: precheck-cluster-image
        default: "ccr.ccs.tencentyun.com/tkeimages/tke-chaos:v0.0.2"
        description: "前置检查工具镜像"
      - name: check-configmap-name
        default: "tke-chaos-precheck-resource"
        description: "前置检查检测的configmap名称"
      - name: check-configmap-namespace
        default: "tke-chaos-test"
        description: "前置检查检测的configmap命名空间"
      - name: pods-health-ratio
        default: "0.9"
        description: "检测集群pods健康率, 0.9表示90%, 当pods健康率小于该值时, 将不允许测试"
      - name: nodes-health-ratio
        default: "0.9"
        description: "集群节点健康率, 0.9表示90%, 当节点健康率小于该值时, 将不允许测试"

      # 资源创建参数
      - name: resource-create-image
        default: "ccr.ccs.tencentyun.com/tkeimages/tke-chaos:v0.0.2"
        description: "资源创建工具镜像"
      - name: resource-create-namespace
        default: "tke-chaos-test"
        description: "创建资源所在的命名空间"
      - name: resource-create-object-type
        default: "pods"
        description: "创建资源类型,支持pods/configmaps"
      - name: resource-create-object-size-bytes
        default: "10000"
        description: "创建资源大小, 单位字节"
      - name: resource-create-object-count
        default: "10"
        description: "创建资源数量"
      - name: resource-create-qps
        default: "10"
        description: "资源创建的QPS"

      # 集群状态采集参数
      - name: cluster-status-image
        default: "ccr.ccs.tencentyun.com/tkeimages/tke-chaos:v0.0.2"
        description: "集群状态检查工具镜像"

      # 压测参数
      - name: inject-stress-image
        default: "ccr.ccs.tencentyun.com/tkeimages/tke-chaos:v0.0.2"
        description: "故障注入工具镜像"
      - name: inject-stress-list-namespace
        default: ""
        description: "list请求的namespace, 如果为空, 则默认不限制namespace"
      - name: inject-stress-list-object-type
        default: "pods"
        description: "list的资源, 支持pods, configmaps"
      - name: inject-stress-list-page-size
        default: "0"
        description: "list每页大小, 默认值为0不分页"
      - name: inject-stress-list-num-clients
        default: "20"
        description: "list的客户端数, 默认值为20"
      - name: from-cache
        default: "true"
        description: "压测工具是否从kube-apiserver缓存中获取数据, 默认从kube-apiserver缓存中读取; 如果为false, 则请求将穿透到etcd"
      - name: inject-stress-user-agent
        default: "kubestress"
        description: "发压端UserAgent, 如: kubestress/1.0.0"
      - name: inject-stress-concurrency
        default: "1"
        description: "并发执行压测的Pod数"
      - name: inject-stress-list-qps
        default: "100"
        description: "单个压测Pod每秒执行list的QPS"
      - name: inject-stress-total-duration
        default: "30s"
        description: "压测持续时间"
    steps:
    - - name: notify-start-chaos  # 通知: 开始故障演练
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          - name: stage
            value: "准备演练"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"
        templateRef:
          name: wechat-notify-template
          template: generate-apiserver-overload-test-message-then-notify
          clusterScope: true
        when: "'{{inputs.parameters.webhook-url}}' != ''"

    - - name: cluster-status-collect-start  # 演练开始前统计集群状态
        templateRef:
          name: cluster-status-collect-template
          template: cluster-status-collect
          clusterScope: true
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.cluster-status-image}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        when: "'{{inputs.parameters.webhook-url}}' != ''"

    - - name: notify-cluster-status-start  # 通知: 演练开始前的集群状态
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          - name: stage
            value: "准备演练"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: cluster-status
            value: "{{steps.cluster-status-collect-start.outputs.parameters.result}}"
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"
        templateRef:
          name: wechat-notify-template
          template: generate-apiserver-overload-test-message-then-notify
          clusterScope: true
        when: "'{{inputs.parameters.webhook-url}}' != ''"

    - - name: notify-start-precheck  # 通知: 开始做演练前校验
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          - name: stage
            value: "开始演练校验"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"
        templateRef:
          name: wechat-notify-template
          template: generate-apiserver-overload-test-message-then-notify
          clusterScope: true
        when: "'{{inputs.parameters.webhook-url}}' != ''"

    - - name: precheck  # 校验集群是否可以执行故障演练
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.precheck-cluster-image}}"
          - name: check-configmap-name
            value: "{{inputs.parameters.check-configmap-name}}"
          - name: check-configmap-namespace
            value: "{{inputs.parameters.check-configmap-namespace}}"
          - name: pods-health-ratio
            value: "{{inputs.parameters.pods-health-ratio}}"
          - name: nodes-health-ratio
            value: "{{inputs.parameters.nodes-health-ratio}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        templateRef:
          name: precheck-template
          template: precheck
          clusterScope: true

    - - name: notify-precheck-result  # 通知: 检验结果
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          - name: stage
            value: "演练校验完成"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"
          - name: check-result
            value: "{{steps.precheck.status}}"
          - name: details-message
            value: "{{steps.precheck.outputs.parameters.result}}"
        templateRef:
          name: wechat-notify-template
          template: generate-apiserver-overload-test-message-then-notify
          clusterScope: true
        when: "'{{inputs.parameters.webhook-url}}' != ''"

    - - name: create-resource # 创建资源, 模拟现网环境资源规模
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.resource-create-image}}"
          - name: namespace
            value: "{{inputs.parameters.resource-create-namespace}}"
          - name: object-type
            value: "{{inputs.parameters.resource-create-object-type}}"
          - name: object-size-bytes
            value: "{{inputs.parameters.resource-create-object-size-bytes}}"
          - name: object-count
            value: "{{inputs.parameters.resource-create-object-count}}"
          - name: num-clients
            value: "20"
          - name: qps
            value: "{{inputs.parameters.resource-create-qps}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        templateRef:
          name: resource-archestrate
          template: resource-create
          clusterScope: true
        when: "{{steps.precheck.status}} == Succeeded && '{{inputs.parameters.enable-resource-create}}' == 'true'"

    - - name: notify-inject-stress  # 通知: 开始注入故障
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          - name: stage
            value: "开始故障注入"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"
          - name: concurrency
            value: "{{inputs.parameters.inject-stress-concurrency}}"
          - name: QPS
            value: "{{inputs.parameters.inject-stress-list-qps}}"
          - name: total-duration
            value: "{{inputs.parameters.inject-stress-total-duration}}"
        templateRef:
          name: wechat-notify-template
          template: generate-apiserver-overload-test-message-then-notify
          clusterScope: true
        when: "{{steps.precheck.status}} == Succeeded && '{{inputs.parameters.webhook-url}}' != ''"

    - - name: inject-stress  # 注入故障
        withSequence:
          count: "{{inputs.parameters.inject-stress-concurrency}}"
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.inject-stress-image}}"
          - name: namespace
            value: "{{inputs.parameters.inject-stress-list-namespace}}"
          - name: object-type
            value: "{{inputs.parameters.inject-stress-list-object-type}}"
          - name: page-size
            value: "{{inputs.parameters.inject-stress-list-page-size}}"
          - name: num-clients
            value: "{{inputs.parameters.inject-stress-list-num-clients}}"
          - name: qps
            value: "{{inputs.parameters.inject-stress-list-qps}}"
          - name: total-duration
            value: "{{inputs.parameters.inject-stress-total-duration}}"
          - name: from-cache
            value: "{{inputs.parameters.from-cache}}"
          - name: user-agent
            value: "{{inputs.parameters.inject-stress-user-agent}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        templateRef:
          name: inject-stress-template
          template: inject-stress
          clusterScope: true
        when: "{{steps.precheck.status}} == Succeeded"
      - name: notify-metrics  # 通知: 控制面指标
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          # get-metrics参数
          - name: sleep-duration
            value: "60"
          # generate-message参数
          - name: stage
            value: "故障注入中"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: concurrency
            value: "{{inputs.parameters.inject-stress-concurrency}}"
          - name: QPS
            value: "{{inputs.parameters.inject-stress-list-qps}}"
          - name: total-duration
            value: "{{inputs.parameters.inject-stress-total-duration}}"
          # notify参数
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        template: metrics-collect-then-notify-to-wechat
        when: "{{steps.precheck.status}} == Succeeded && '{{inputs.parameters.webhook-url}}' != ''"

    - - name: cluster-status-collect-end  # 演练结束统计集群状态
        continueOn:
          failed: true
          error: true
        templateRef:
          name: cluster-status-collect-template
          template: cluster-status-collect
          clusterScope: true
        arguments:
          parameters:
          - name: image
            value: "{{inputs.parameters.cluster-status-image}}"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        when: "'{{inputs.parameters.webhook-url}}' != ''"

    - - name: notify-cluster-status-end  # 通知演练结束时集群状态
        continueOn:
          failed: true
          error: true
        arguments:
          parameters:
          - name: stage
            value: "演练结束"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"
          - name: cluster-status
            value: "{{steps.cluster-status-collect-end.outputs.parameters.result}}"
          - name: sleep-duration
            value: "30"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        template: metrics-collect-then-notify-to-wechat
        when: "'{{inputs.parameters.webhook-url}}' != ''"

    - - name: delete-resource # 删除资源
        arguments:
          parameters:
          - name: cmd
            value: "delete -n {{inputs.parameters.resource-create-namespace}} {{inputs.parameters.resource-create-object-type}} -l kubestress"
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
        templateRef:
          name: kubectl-cmd
          template: kubectl-cmd
          clusterScope: true
        when: "{{steps.precheck.status}} == Succeeded && '{{inputs.parameters.enable-resource-create}}' == 'true'"


  - name: metrics-collect-then-notify-to-wechat
    inputs:
      parameters:
      # get-metrics参数
      - name: sleep-duration
        default: "0"
        description: "采集metrics前等待的时间"
      - name: kubeconfig-secret-name
        description: "测试remote cluster填该字段, 如未填些, 则测试当前集群(选填)"
      # notify参数
      - name: webhook-url
        description: "企业微信群webhook通知地址"
      - name: stage
        description: "演练执行阶段"
      - name: cluster-id
        description: "集群ID"
      - name: chaos-type
        description: "演练类型"
      - name: concurrency
        default: "N/A"
        description: "并发执行压测的Pod数"
      - name: QPS
        default: "N/A"
        description: "单个压测Pod每秒执行list的QPS"
      - name: total-duration
        default: "N/A"
        description: "压测持续时间"
      - name: cluster-status
        default: "N/A"
        description: "集群状态"
      - name: check-result
        default: "N/A"
        description: "前置检测结果"
      - name: details-message
        default: "N/A"
        description: "详细信息"
    steps:
    - - name: delay
        template: delay
        arguments:
          parameters:
          - name: duration
            value: "{{inputs.parameters.sleep-duration}}"
    - - name: get-metrics
        templateRef:
          name: controll-plan-metrics-collect-template
          template: get-metrics
          clusterScope: true
        arguments:
          parameters:
          - name: kubeconfig-secret-name
            value: "{{inputs.parameters.kubeconfig-secret-name}}"
    - - name: generate-and-notify
        templateRef:
          name: wechat-notify-template
          template: generate-apiserver-overload-test-message-then-notify
          clusterScope: true
        arguments:
          parameters:
          - name: stage
            value: "{{inputs.parameters.stage}}"
          - name: cluster-id
            value: "{{inputs.parameters.cluster-id}}"
          - name: chaos-type
            value: "{{inputs.parameters.chaos-type}}"
          - name: concurrency
            value: "{{inputs.parameters.concurrency}}"
          - name: QPS
            value: "{{inputs.parameters.QPS}}"
          - name: total-duration
            value: "{{inputs.parameters.total-duration}}"
          - name: cluster-status
            value: "{{inputs.parameters.cluster-status}}"
          - name: controll-plane-metrics
            value: "{{steps.get-metrics.outputs.parameters.result}}"
          - name: check-result
            value: "{{inputs.parameters.check-result}}"
          - name: details-message
            value: "{{inputs.parameters.details-message}}"
          - name: webhook-url
            value: "{{inputs.parameters.webhook-url}}"

  - name: delay
    inputs:
      parameters:
      - name: duration
    suspend:
      duration: "{{inputs.parameters.duration}}"
